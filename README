If you want to know why this software exists, please read the README file of ch.oddb.org at scm.ywesee.com

yus is only running on Ruby1.8

Install the following packages with gem:

	needle (1.3.0)
	pg (0.9.0) 
	postgres (0.7.9.2008.01.28)

Install from source

	ruby-password (0.5.3)

Make sure you got the directory

	/etc/yus/
	/etc/yus/data/

with the files

	/etc/yus/data/yus.crt  
	/etc/yus/data/yus.key

and also 

	/etc/yus/yus.yml

the content of the yaml-file should be

	---
	root_name: email@domain.com
	root_pass: 7322we3asalkasdfkjl9234kjljasd234234ljsdlfkasjw23235lajsdfwr3scv [the SHA2-hash of your password]
	log_level: DEBUG
	ssl_key: /etc/yus/data/yus.key [path to an rsa private key]
	ssl_cert: /etc/yus/data/yus.crt [path to a ssl x509 certificate]
	session_timeout: 3600

To create root_pass do

	[[	
		This is the usage:

		$ cat sha256.rb
		require 'digest/sha2'
		print "password: ", ARGV[0], "\n"
		print "SHA256 encoding: ",Digest::SHA256.hexdigest(ARGV[0]),"\n"
	]]
	
	$ ruby sha256.rb hatakeyama [sha256.rb is in the source you can use that].
	password: hatakeyama
	SHA256 encoding:
	48714061119f3bb753a0c63dd4230f641ab79e58eb603fc263925c53580acdf1

		Note:

			It seems that the yus server can work without the enconding password string, but
			yus admin tools (yus_add_user etc.) do not work without the password
			in my local environment.

Then you should paste the enconding password in 'root-pass' of

	/etc/yus/yus.yml 

for the yus server setup. When you start the yus server or you use yus admin commands, the
server asks you for the password.

for id_rsa.crt
	
	$ openssl req -new -x509 -key .ssh/id_rsa -out .ssh/id_rsa.crt

Create a new user with

	yus_add_user email@domain.com login org.oddb.RootUser

	[[Note: 
	
	> This 'org.oddb.RootUser' is refered to in
	> http://scm.ywesee.com/?p=oddb.org/.git;a=blob;f=src/state/admin/login.rb;h=1d910af359a224036fc761187bcf960a0d734b80;hb=HEAD#l45
	>
	> oddb.org/state/admin/login.rb
	>  def viral_modules(user)
	>    [
	>      ['org.oddb.RootUser', State::Admin::Root],
	>      ['org.oddb.AdminUser', State::Admin::Admin],
	>      ['org.oddb.PowerUser', State::Admin::PowerUser],
	>      ['org.oddb.CompanyUser', State::Admin::CompanyUser],
	>      ['org.oddb.PowerLinkUser', State::Admin::PowerLinkUser],
	>    ].each { |key, mod|
	>      if(user.allowed?("login", key))
	>        yield mod
	>      end
	>    }
	>  end

	]]

If you create a new user you have to make sure that

	bin/yusd

is running. Then you have to grant 

	yus_grant zdavatz@ywesee.com edit yus.entities	

like this you will get the 

	Benutzer 

menu in ch.oddb.org

For installing extensive user privileges for ch.oddb.org you need to do the following:

	> It also works to add a new user from the web interface
	>
	>   Neuer Benutzer
	>
	> After I added all the following:
	>
	> yus_grant mhatakeyama@ywesee.com edit yus.entities
	> yus_grant mhatakeyama@ywesee.com grant  login
	> yus_grant mhatakeyama@ywesee.com grant  view
	> yus_grant mhatakeyama@ywesee.com grant  create
	> yus_grant mhatakeyama@ywesee.com grant  edit
	> yus_grant mhatakeyama@ywesee.com grant  credit
	>
	> I created RootUser with the 'Neuer Benutzer' button.
	> And I checked the RootUser group for mhatakeyama@ywesee.com
	>
	> Then, the Privilege-Boxes became gray.
	> The gray checkboxes mean that the privileges are granted.

To run the tests you are gonne need

	flexmock (0.8.6)

[IMPORTANT]
* You should NOT install dbd-pg-0.3.x for the postgreSQL driver and
  dbi-0.4.x, because it has already been known that the dbd-pg-0.3.x
  depends on the library, deprecated-0.2.x, that causes an error.

* ruby-dbi version via emerge that works is 0.2.0-r1

* Install odba (from scm.ywesee.com)

[SETUP POSTGRES DB]
$ su - postgres
$ createuser yus
$ createdb yus
$ exit
$ cd [yus-git-reposito]
$ ruby bin/yusd

